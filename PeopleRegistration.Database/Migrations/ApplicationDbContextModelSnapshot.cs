// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PeopleRegistration.Database;

#nullable disable

namespace PeopleRegistration.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.PersonInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePhoto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProfilePhotoEncoding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResidencePlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ResidencePlaceId")
                        .IsUnique()
                        .HasFilter("[ResidencePlaceId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("PeopleInformation");
                });

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.ResidencePlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResidencePlaces");
                });

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("PasswordNeverExpires")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateOnly>("PasswordSetDate")
                        .HasColumnType("date");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.PersonInformation", b =>
                {
                    b.HasOne("PeopleRegistration.Shared.Entities.ResidencePlace", "ResidencePlace")
                        .WithOne("PersonInformation")
                        .HasForeignKey("PeopleRegistration.Shared.Entities.PersonInformation", "ResidencePlaceId");

                    b.HasOne("PeopleRegistration.Shared.Entities.User", "User")
                        .WithMany("PersonInformation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidencePlace");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.ResidencePlace", b =>
                {
                    b.Navigation("PersonInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("PeopleRegistration.Shared.Entities.User", b =>
                {
                    b.Navigation("PersonInformation");
                });
#pragma warning restore 612, 618
        }
    }
}
